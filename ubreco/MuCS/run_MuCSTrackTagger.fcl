#include "services_microboone.fcl"
##include "reco_uboone_mcc8.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "triggeralgo_service.fcl"
#include "MuCSTrackTagger_module.fcl"
#include "MuCSMerger_uboone.fcl"

process_name: MuCSTrackTagger


services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "MuCSTrackTagger_ana.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator:   {} #ART native random number generator
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
  PhotonVisibilityService:    @local::microboone_photonvisibilityservice
  OpDigiProperties:           @local::microboone_opdigiproperties
                              @table::microboone_services_reco
}

services.DatabaseUtil.ShouldConnect: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB:      false
services.ChannelStatusService.ChannelStatusProvider.UseDB:       false
services.ElectronicsCalibService.ElectronicsCalibProvider.UseDB: false
services.ChannelStatusService.ChannelStatusProvider.UseDB:       false

services.TPCEnergyCalibService.TPCEnergyCalibProvider: @local::microboone_tpcenergycalib_provider_mc
services.TPCEnergyCalibService.TPCEnergyCalibProvider.XNormCorrectionProvider.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.XShapeCorrectionProvider.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.XShapeCorrectionProvider_Plane0.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.XShapeCorrectionProvider_Plane1.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.XShapeCorrectionProvider_Plane2.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.YZCorrectionProvider.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.YZCorrectionProvider_Plane0.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.YZCorrectionProvider_Plane1.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.YZCorrectionProvider_Plane2.UseDB:     false
services.TPCEnergyCalibService.TPCEnergyCalibProvider.dEdxCorrectionProvider.UseDB:     false

services.DetectorPropertiesService.NumberTimeSamples:        6400
services.DetectorPropertiesService.ReadOutWindowSize:        6400
services.DetectorClocksService.InheritClockConfig:           false
services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3
services.TFileService.fileName: "showerreco_ana.root"
services.BackTrackerService:  @local::microboone_backtrackerservice
services.ParticleInventoryService: @local::standard_particleinventoryservice

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_MuCSTrackTagger.root"    #default file name, can override from command line with -o or --output
   dataTier: reco
   compressionLevel: 1
 } 
}

physics:
{
 producers:{MuCSTrackTaggerpandora: @local::microboone_MuCSTrackTagger}
 filters:  {} 
 analyzers:{}
 
 met: [MuCSTrackTaggerpandora]
 ana:  []
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [met] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ ana, stream1  ] 
}



physics.producers.MuCSTrackTaggerpandora.BoxExtension: 20
physics.producers.MuCSTrackTaggerpandora.TrackModuleLabel: "pandora"

DetectorClocksService.InheritClockConfig: false
services.DetectorClocksService.InheritClockConfig: false

